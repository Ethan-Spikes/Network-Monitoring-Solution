#!/bin/bash

#this is secure1host simplified. 

#the original secure1host was monolithic and awkward.

#still working on configuration and output.


################################################################# args and variables

ARGS=$(getopt --options 'hy' --long "help, yes" -- "$@")

set -- "$ARGS"

All_Yes='n'

S_Update='n'
T_Update='n'
C_Erase='n'
C_Update='n'
F_Default='n'
Net_Scan='n'
F_White_Port='n'
port=' '
Hard_Audit='n'
Pen_Audit='n'
###################stop include here
A_Whitelist='n'
Log_Enable='n'
Hash='n'
Vuln_Scan='n'
Mon_Scan='n'
U_White='n'
U_Mon='n'
Host_Mon='n'
Scan_Detect='n'
Honey_Creds='n'
P_Cap='n'
Snort='n'
Honey_Ports='n'
Honey_Hash='n'
Scan_Frag='n'
Priv_Frag='n'
Scan_Resp='n'
Trap_Monitor='n'
Trap_Ban='n'
Trap_Report='n'
Auto_Response='n'


######################################################## Functions

Full_System_Update() { #Function Included

	if [ $S_Update == 'y' ]; then 
		echo "Beginning full system upgrade"
		echo " "
		sudo apt -y update
		sudo apt -y full-upgrade
		sudo apt -y autoremove
		sudo apt -y autoclean
		echo "System fully upgraded"
		echo " "

	fi
		
}

Tools_Update() { #Function Included

	if [ $T_Update == 'y' ]; then
		
		echo "Beginning tools update"
		echo " "
		sudo apt -y update
		sudo apt -y install nmap ufw lynis crontab
		sudo apt -y upgrade nmap ufw lynis crontab
		sudo apt -y autoremove
		sudo apt -y autoclean
		echo "tools fully installed and updated"
		echo " "
		
	fi

		
}

Auto_System_Updates() {  #function good
	
	if [ $C_Update == 'y' ]; then
		echo "0 1 * * * apt -y update 
1 1 * * * apt -y upgrade 
2 1 * * * apt -y autoremove 
3 1 * * * apt -y autoclean " | sudo crontab -
	fi


}


Default_Firewall_Enable() {

	if [ $F_Default == 'y' ]; then
		sudo ufw enable
	fi


}



Firewall_Whitelist_Single_Out_Port() {

	if [ $F_White_Port == 'y' ]; then
		sudo ufw allow out $port
		if [ $Flip_white_port == 'false' ]; then
			sudo ufw default deny outgoing
			Flip_white_port='true'
		fi
		Display_Firewall_Status
	fi
	


}




##################################STOP INCLUDING Here

Enable_Logging() {

	if [ $Log_Enable == 'y' ]; then
		echo 'not made yet'
		#do one thing
	fi


}

Scanning_Self_For_Vulnerabilities() {
	
	if [ $Vuln_Scan == 'y' ]; then
		echo 'not made yet'
	fi

	
}



Set_up_Netcat_scan_detector() {

	if [ $Scan_Detect == 'y' ]; then
		echo 'not made yet'
	fi

	
}

Monitoring_Neighbors() {

	if [ $Mon_Scan == 'y' ]; then
		echo 'not made yet'
	fi

	
}

Hashing_Files_and_Executables() {

	if [ $Hash == 'y' ]; then
		echo 'not made yet'
	fi

	
}


User_Whitelisting() {

	if [ $U_White == 'y' ]; then
		echo 'not made yet'
	fi

	
}

User_Monitoring() {

	if [ $U_Mon == 'y' ]; then
		echo 'not made yet'
	fi

	
}


Enable_Honey_Ports() {

	if [ $Honey_Ports == 'y' ]; then
		echo 'not made yet'
	fi

	
}


Frustrate_Scanning_Efforts() {

	if [ $Scan_Frag == 'y' ]; then
		echo 'not made yet'
	fi

	
}


Respond_To_Scanning() {

	if [ $Scan_Resp == 'y' ]; then
		echo 'not made yet'
	fi

	
}

Automated_Response() {

	if [ $Auto_Response == 'y' ]; then
		echo 'not made yet'
		#do one thing
	fi


}

###################################################progress report functions below


Display_Crontab() { #Function Included


	echo "---Displaying user crontab---"
	echo " "
	crontab -l
	echo " "
	echo "---Displaying root crontab---"
	echo " "
	sudo crontab -l
	echo " "


}

Display_Firewall_Status() { #function included

	echo "---Displaying UFW Firewall status---"
	echo " "
	sudo ufw status verbose
	echo " "

}

Basic_Net_Scan() {
	
	if [ $Net_Scan == 'y' ]; then
		echo "---Initiating basic network scan---"
		echo " "
		First_Three=$(ifconfig | grep netmask | awk '/broadcast/ {print $2}' | cut -d "." -f 1,2,3 | uniq)
		Net=$(ip addr show | grep inet | grep brd | tr '/' ' ' | awk '{print $3}')
		ID=$(ifconfig | grep netmask | awk '/broadcast/ {print $4}' | tr '.' ' ' | awk '{print $4}')
		sudo nmap -T4 $First_Three.$ID/$Net
		echo " "
	fi

	
}

Lynis_Hardening_Audit() {

	if [ $Hard_Audit == 'y' ]; then
		echo 'system will now do an internal audit'
		sudo lynis audit system
	fi
	
}

Progress_Report() {

		Display_Crontab
		Display_Firewall_Status
		Basic_Net_Scan
		Lynis_Hardening_Audit

}

####################################################### Checks and Help



Root_Check() { #good

	user=$(whoami)
	if [ $user != root ]; then
		echo 'Permission denied.'
		echo ' '
		Help
		exit
	fi

}

Help() { #good
	
	echo 'Displaying help:'
	echo ' '
	echo 'to run the program, execute "sudo secure1host"'
	echo 'to run the program with all settings enabled, execute "sudo secure1host -y"'
	echo 'to display this help again, run "secure1host -h (or --help)"'

}

############################################################## Set Variables

Set_Variables() {

	echo "Answer the following questions."
	echo " "
	echo "would you like to run a full upgrade of the system?(y/n)"
	read S_Update
	echo " "
	echo "would you like to install and update all tools used in this script?(y/n)"
	read T_Update
	echo " "
	echo "Would you like to create a cron job to run an upgrade of the system at 1AM every morning to protect it from vulnerabilities?(y/n)"
	read C_Update
	echo " "
	echo "Would you like to enable a default system firewall? (deny incoming, allow outgoing)(y/n)"
	read F_Default
	echo " "
	echo "Would you like to run a local subnet scan after the script runs?(y/n)"
	read Net_Scan
	echo " "
	echo "Would you like to run a System Hardening Audit after the script runs?(y/n)"
	read Hard_Audit
	echo " "

} 

############################################################## Run Commands

Run_Commands() {

	Full_System_Update
	Tools_Update
	Auto_System_Updates
	Default_Firewall_Enable

}

############################################################## All Yeses
All_Yes() {

	S_Update='y'
	T_Update='y'
	C_Erase='y'
	C_Update='y'
	F_Default='y'
	Net_Scan='y'
	F_White_Port='y'
	port=' '
	Hard_Audit='y'
	Pen_Audit='y'
	###################stop include here
	A_Whitelist='y'
	Log_Enable='y'
	Hash='y'
	Vuln_Scan='y'
	Mon_Scan='y'
	U_White='y'
	U_Mon='y'
	Host_Mon='y'
	Scan_Detect='y'
	Honey_Creds='y'
	P_Cap='y'
	Snort='y'
	Honey_Ports='y'
	Honey_Hash='y'
	Scan_Frag='y'
	Priv_Frag='y'
	Scan_Resp='y'
	Trap_Monitor='y'
	Trap_Ban='y'
	Trap_Report='y'
	Auto_Response='y'
	
}

############################################################## Main

Main() {


	#changes settings based on options
	
	echo "Welcome to secure1host!"

	
	for i in $ARGS; do
		case "$i" in
			-h | --help)
				Help
				exit;;
			-y | --yes)
				All_Yes='y'
				shift;;
			--)
				echo " "
				Root_Check
				break;;

		esac
	done
	
	#executes based on settings
	
	if [ $All_Yes == 'y' ]; then
		All_Yes
	else
		Set_Variables
	fi
	Run_Commands
	Progress_Report
	
	echo "secure1host complete. Terminating script."
	exit
}

Main
